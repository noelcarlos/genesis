<?xml version="1.0" encoding="UTF-8" ?>
<module xmlns="http://www.esmartpoint.com/schema/random-generator"
	xmlns:db="http://www.esmartpoint.com/schema/db-random-generator"
	xmlns:es="http://www.esmartpoint.com/schema/elasticsearch-random-generator"
	xmlns:http="http://www.esmartpoint.com/schema/genesis/http">
	
	<input name="userCount"/>
	<output name="userList" />
	<output name="userSelector" />
	
	<selector var="isDeleted">
		<item weight="10" value="true"/>
		<item weight="90" value="false"/>
	</selector>
	
	<selector var="isActive">
		<item weight="10" value="true"/>
		<item weight="90" value="false"/>
	</selector>

	<selector var="browserType">
		<item weight="30" value="'Firefox'"/>
		<item weight="40" value="'Chrome'"/>
		<item weight="25" value="'IE'"/>
		<item weight="5" value="'Other'"/>
	</selector>	

	<selector var="emailDomain">
		<item weight="10" value="'ridermove.com'"/>
		<item weight="30" value="'hotmail.com'"/>
		<item weight="40" value="'gmail.com'"/>
		<item weight="5" value="'yahoo.com'"/>
		<item weight="5" value="'aol.com'"/>
	</selector>		

	<selector var="rank">
		<item weight="10" value="1"/>
		<item weight="20" value="2"/>
		<item weight="30" value="3"/>
		<item weight="50" value="4"/>
		<item weight="10" value="5"/>
	</selector>
	
	<db:load var="entityClass">
		select * from snm_classes where package_name='org.snm.core' and class_name='User'
	</db:load>
	
	<selector var="firstNameSelector" weightNull="0" keyValue="nombre" keyWeight="frecuencia" >
		<sql>
			SELECT * FROM datagen.src_nombres
		</sql>
	</selector>
	
	<selector var="lastNameSelector" weightNull="0" keyValue="apellido" keyWeight="frecuencia" >
		<sql>
			SELECT * FROM datagen.src_apellidos
		</sql>
	</selector>
	
	<selector var="deporteSelector" weightNull="0" weightValue="100" >
		<sql>SELECT t.* FROM snm_categories t INNER JOIN snm_contexts c ON t.context_id = c.context_id WHERE c.name = 'deporte'</sql>
	</selector>	

	<selector var="tagSelector" weightNull="0" weightValue="100" >
		<sql>SELECT t.* FROM snm_tags t INNER JOIN snm_contexts c ON t.context_id = c.context_id WHERE c.name = 'lugar.tag'</sql>
	</selector>
	
	<selector var="ciudadSelector" weightNull="0" weightValue="100" >
		<sql>SELECT t.* FROM snm_categories t INNER JOIN snm_contexts c ON t.context_id = c.context_id WHERE c.name = 'ciudad'</sql>
	</selector>
	
	<selector var="servicioSelector" weightNull="0" weightValue="100" >
		<sql>SELECT t.* FROM snm_tags t INNER JOIN snm_contexts c ON t.context_id = c.context_id WHERE c.name = 'lugar.servicio'</sql>
	</selector>	
	
	<selector var="requisitoSelector" weightNull="0" weightValue="100" >
		<sql>SELECT t.* FROM snm_tags t INNER JOIN snm_contexts c ON t.context_id = c.context_id WHERE c.name = 'lugar.requisito'</sql>
	</selector>	
	
	<def var="entity" type="java.util.HashMap" />
	<def var="user" type="java.util.HashMap" />
	
	<generate title="snm_users" var="userList" element="globals.secuences.snm_entities" type="fixed" size="userCount">
		<set var="secuences" field="snm_entities" value="globals.secuences.snm_entities + 1" scope="global" />
		
		<set var="firstName" value="firstNameSelector.getNext()" />
		<set var="lastName1" value="lastNameSelector.getNext()" />
		<set var="lastName2" value="lastNameSelector.getNext()" />
		<set var="createAt" value="generator.randomDate(new org.joda.time.DateTime(2000, 1,  1, 0, 0), new org.joda.time.DateTime(2014, 1,  1, 0, 0))" />
		<set var="modifiedAt" value="generator.randomDate(createAt, new org.joda.time.DateTime().now())" />
		<set var="lastLogonAt" value="generator.randomDate(createAt, modifiedAt)" />
		
		<http:post url="globals.ridermoveElasticsearchUrl+'/lugar/' + globals.secuences.snm_entities" result="result" resultType="JSON">
			{
		        "entity": {
		            "name": "${generator.randomTitle(10, 64, 2, 8)}",
		            "entityClassName": "lugar",
		            "entityClassPackageName": "org.rider.model",
		            "entityClassClassName": "Lugar",
		            "entityClassId": 100,
		            "createdById": ${globals.secuences.snm_entities},
		            "createdByEmail": "${userSelected.email}",
		            "createdByFirstName": "${userSelected.firstName}",
		            "createdByAvatarLocation": "avatars/${generator.randomFilename(10,28,3,8,ext)}",
		            "createdByAvatarType": "avatar",
		            "createdByAvatarId": 26791,
		            "createdOn": "${createAt.toDate()}",
		            "modifiedOn": "${modifiedAt.toDate()}",
		            "isDeleted": true,
		            "humanUrlName": "${generator.toHumanURL(firstName, 128)}",
		            "numLikes": ${generator.randomInt(0, 1000)},
		            "numVisits": ${generator.randomInt(0, 1000)},
		            "numComments": ${generator.randomInt(0, 1000)},
		            "numPosts": ${generator.randomInt(0, 1000)},
		            "numMembers": ${generator.randomInt(0, 1000)},
		            "numEvaluations": ${generator.randomInt(0, 1000)},
		            "numDocuments": ${generator.randomInt(0, 1000)},
		            "numNolikes": ${generator.randomInt(0, 1000)},
		            "numNotes": ${generator.randomInt(0, 1000)},
		            "numTasks": ${generator.randomInt(0, 1000)},
		            "numFollowers": ${generator.randomInt(0, 1000)},
		            "numQuestions": ${generator.randomInt(0, 1000)},
		            "numSuggests": ${generator.randomInt(0, 1000)},
		            "rank": ${generator.randomInt(0, 5)},
		            "categories": [
					  ${deporteSelector.restart()}
					  #for(i: 1 .. generator.randomInt(1, 5))
					  	#set(value = deporteSelector.nextUnique())
					      {
					          "categoryId": ${value.category_id},
					          "name": "${value.name}",
					          "contextId": 104,
					          "contextName": "deporte"
					      }#break(for.last),		            	
					  #end
		            ],
		            "tags": [
					  ${tagSelector.restart()}
					  #for(i: 1 .. generator.randomInt(1, 5) )
					  	#set(value = tagSelector.nextUnique())
					      {
		                    "tagId": ${value.id},
		                    "name": "${value.name}",
		                    "contextId": 130,
		                    "contextName": "lugar.tag"
					      }#break(for.last),		            	
					  #end
		            ]
		        },
		        "description": "${generator.randomParagraph(128, 500, 10, 64, 2, 8)}",
		        "firstName": "${firstName}",
		        "lastName": "${lastName1} ${lastName2}",
		        "isDeleted": ${generator.randomBoolean(90, 10)},
		        "isActive": ${generator.randomBoolean(90, 10)},
		        "lastLogonAt": "${lastLogonAt.toDate()}",
		        "lastLogonIp": "${generator.randomIP()}",
		        "browserType": "${browserType.getNext()}",
		        "email": "${firstName.toLowerCase()}.${lastName1.toLowerCase()}@${emailDomain.getNext()}",
		        "password": "secret",
		        "resumen": "${generator.randomParagraph(128, 500, 10, 64, 2, 8)}",
		        "presentacionPersonal": "${generator.randomTitle(10, 50, 2, 8)}",
		        "actionbarBackgroundColor": "${generator.randomHexNumeric(6)}",
		        "servicios": [
					  ${servicioSelector.restart()}
					  #for(i: 1 .. generator.randomInt(1, 5) )
					  	#set(value = servicioSelector.nextUnique())
					      {
		                "tagId": ${value.id},
		                "name": "${value.name}",
		                "contextId": 127,
		                "contextName": "lugar.servicio"
					      }#break(for.last),		            	
					  #end
		        ],
		        "locations": [
					  ${deporteSelector.restart()}
					  #for(i in 1 .. generator.randomInt(1, 5) )
					  	#set(value = deporteSelector.nextUnique())
					      {
		                	"categoryId": ${value.category_id},
		                	"name": "${value.name}",
		                	"contextId": 126,
		                	"contextName": "ciudad"
					      }#break(for.last),		            	
					  #end
		        ],
		        "requisitos": [
					  ${requisitoSelector.restart()}
					  #for(i: 1 .. generator.randomInt(1, 5) )
					  	#set(value = requisitoSelector.nextUnique())
					      {
			                "tagId": ${value.id},
			                "name": "${value.name}",
			                "contextId": 128,
			                "contextName": "lugar.requisito"
					      }#break(for.last),		            	
					  #end
	        ],
		        "imageId": 24034,
		        "imageLocation": "archives/${generator.randomFilename(10,28,3,8,ext)}-l.jpg"
		    }
		</http:post>
		
		<assert condition="result.created==true" />
		
	</generate>
	
	<db:script>
		update snm_users set email='nhernandez@esmartpoint.com', password='secret', first_name='Noel Carlos', 
			last_name='Hernández Pérez',is_active=1,is_deleted=0 where user_id = (select min(entity_id) from snm_entities);
		update snm_entities set name='Noel Carlos Hernández Pérez' where entity_id = (select min(user_id) from snm_users);
		update snm_user_roles set role_id=1 where user_id = (select min(user_id) from snm_users);
	</db:script>
	
	<selector var="parentFrecuency">
		<item weight="10" value="null"/>
		<item weight="90" value="1"/>
	</selector>

	<def var="data" type="java.util.HashMap" />

	<generate title="snm_users\user_profile" 
		type="child" source="userList" parentFrecuency="parentFrecuency">
		
		<set var="data">
			<field name="user_id" value="parent" />
			<field name="resumen" value="generator.randomParagraph(128, 500, 10, 64, 2, 8)" />
			<field name="presentacion_personal" value="generator.randomTitle(10, 50, 2, 8)" />
			<field name="actionbar_background_color" value="generator.randomHexNumeric(6)" />
		</set> 
		
		<db:insert table="user_profile" value="data" />
		
	</generate>

	<selector var="fileExtension">
		<item weight="75" value="'jpg'"/>
		<item weight="20" value="'png'"/>
		<item weight="5" value="'bmp'"/>
	</selector>
	
	<generate title="snm_users\snm_archives" type="child" source="userList" parentFrecuency="parentFrecuency">
		<set var="secuences" field="snm_archives" value="globals.secuences.snm_archives + 1" scope="global"/>
		
		<set var="createAt" value="generator.randomDate(new org.joda.time.DateTime(2000, 1,  1, 0, 0), new org.joda.time.DateTime(2014, 1,  1, 0, 0))" />
		<set var="ext" value="fileExtension.getNext()" />
		<set var="fileName" value="generator.randomFilename(10,28,3,8,ext)" />
		
		<set var="data" type="java.util.HashMap">
			<field name="id" value="globals.secuences.snm_archives" />
			<field name="created_by_id" value="parent" />
			<field name="created_at" value="createAt.toDate()" />
			<field name="deleted_by_id" value="null" />
			<field name="deleted_at" value="null" />
			<field name="crop_x1" value="0" />
			<field name="crop_y1" value="0" />
			<field name="crop_x2" value="generator.randomNumberWithStep(50, 250, 25)" />
			<field name="crop_y2" value="generator.randomNumberWithStep(50, 250, 25)" />
			<field name="file_size" value="generator.randomNumberWithStep(1024, 1024*100000, 1024)" />
			<field name="width" value="generator.randomNumberWithStep(50, 250, 25)" />
			<field name="height" value="generator.randomNumberWithStep(50, 250, 25)" />
				
			<field name="location" value="fileName" />
			<field name="name" value="fileName" />
			<field name="original" value="fileName" />
			<field name="type" value="ext" />
		</set> 
		
		<db:insert table="snm_archives" value="data" />
		
	</generate>
	
	<selector var="rol">
		<item weight="10" value="1"/>
		<item weight="90" value="2"/>
		<item weight="900" value="3"/>
	</selector>
	
	<generate title="snm_users\snm_user_roles" type="child" source="userList" parentFrecuency="parentFrecuency">
		
		<set var="createAt" value="generator.randomDate(new org.joda.time.DateTime(2000, 1,  1, 0, 0), new org.joda.time.DateTime(2014, 1,  1, 0, 0))" />
		
		<set var="data" type="java.util.HashMap">
			<field name="user_id" value="parent" />
			<field name="start_date" value="createAt.toDate()" />
			<field name="role_id" value="rol.getNext()" />
			<field name="is_current" value="true" />
		</set> 
		
		<db:insert table="snm_user_roles" value="data" />
		
	</generate>
	
	<db:list var="userList" projectToMap="false">
		select user_id from snm_users where is_active=1
	</db:list>

	<selector var="parentFrecuency">
		<item weight="20" value="null"/>
		<item weight="80" from="1" to="5"/>
		<item weight="30" from="6" to="10"/>
		<item weight="3" from="10" to="50"/>
	</selector>
	
	<selector var="userSelector" items="userList" weightNull="0" weightValue="90" />
	
	<execute file="generate-albums.xml">
		<input name="entityList" value="userList" />
		<input name="userSelector" />
	</execute>
	
	<execute file="generate-followers.xml">
		<input name="entityList" value="userList" />
		<input name="userSelector" />
	</execute>
	
	<execute file="generate-evaluations.xml">
		<input name="entityList" value="userList" />
		<input name="userSelector" />
	</execute>
	
</module>